#include "linalg.h"
#include "olcPixelGameEngine.h"
#include <numbers>

#define Timer_Start(x) const auto x = std::chrono::high_resolution_clock::now()
#define Timer_End(x, y) std::cout << (x) << (std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::high_resolution_clock::now() - (y)).count() / 1000.f) << " s" << std::endl

struct Window : olc::PixelGameEngine
{
	Window()
	{
		sAppName = "{projectName}";
	}

	bool OnUserCreate() override
	{
		return true;
	}

	bool OnUserUpdate(float fElapsedTime) override
	{

		using namespace std::chrono_literals;
		//std::this_thread::sleep_for(16ms);
		const auto ctrl_w = GetKey(olc::Key::CTRL).bHeld && GetKey(olc::Key::W).bPressed;
		return !(ctrl_w || GetKey(olc::Key::ESCAPE).bPressed || GetKey(olc::Key::ESCAPE).bHeld);
	}
};

int main()
{
	Window window;
	window.Construct(1024, 1024, 1, 1);
	window.Start();
	return 0;
}
