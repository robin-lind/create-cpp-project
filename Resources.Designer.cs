//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace create_cpp_project {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("create_cpp_project.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;ItemGroup&gt;
        ///    &lt;Filter Include=&quot;Source Files&quot;&gt;
        ///      &lt;UniqueIdentifier&gt;{sourceGuid}&lt;/UniqueIdentifier&gt;
        ///      &lt;Extensions&gt;cpp;c;cc;cxx;c++;cppm;ixx;def;odl;idl;hpj;bat;asm;asmx&lt;/Extensions&gt;
        ///    &lt;/Filter&gt;
        ///    &lt;Filter Include=&quot;Header Files&quot;&gt;
        ///      &lt;UniqueIdentifier&gt;{headerGuid}&lt;/UniqueIdentifier&gt;
        ///      &lt;Extensions&gt;h;hh;hpp;hxx;h++;hm;inl;inc;ipp;xsd&lt;/Extensions&gt;
        ///    &lt;/Fil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string filters {
            get {
                return ResourceManager.GetString("filters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // linalg.h - v2.0 - Single-header public domain linear algebra library
        /////
        ///// The intent of this library is to provide the bulk of the functionality
        ///// you need to write programs that frequently use small, fixed-size vectors
        ///// and matrices, in domains such as computational geometry or computer
        ///// graphics. It strives for terse, readable source code.
        /////
        ///// The original author of this software is Sterling Orsten, and its permanent
        ///// home is &lt;http://github.com/sgorsten/linalg/&gt;. If you find this soft [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string linalg {
            get {
                return ResourceManager.GetString("linalg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;linalg.h&quot;
        ///#include &lt;numbers&gt;
        ///
        ///#define Timer_Start(x) const auto x = std::chrono::high_resolution_clock::now()
        ///#define Timer_End(x, y) std::cout &lt;&lt; (x) &lt;&lt; (std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(std::chrono::high_resolution_clock::now() - (y)).count() / 1000.f) &lt;&lt; &quot; s&quot; &lt;&lt; std::endl
        ///
        ///int main()
        ///{
        ///
        ///	return 0;
        ///}
        ///.
        /// </summary>
        internal static string main {
            get {
                return ResourceManager.GetString("main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma region license_and_help
        ////*
        ///	olcPixelGameEngine.h
        ///
        ///	+-------------------------------------------------------------+
        ///	|           OneLoneCoder Pixel Game Engine v2.15              |
        ///	|  &quot;What do you need? Pixels... Lots of Pixels...&quot; - javidx9  |
        ///	+-------------------------------------------------------------+
        ///
        ///	What is this?
        ///	~~~~~~~~~~~~~
        ///	olc::PixelGameEngine is a single file, cross platform graphics and userinput
        ///	framework used for games, visualisations, algorithm exploration and lear [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string olcPGE {
            get {
                return ResourceManager.GetString("olcPGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;linalg.h&quot;
        ///#include &quot;olcPixelGameEngine.h&quot;
        ///#include &lt;numbers&gt;
        ///
        ///#define Timer_Start(x) const auto x = std::chrono::high_resolution_clock::now()
        ///#define Timer_End(x, y) std::cout &lt;&lt; (x) &lt;&lt; (std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(std::chrono::high_resolution_clock::now() - (y)).count() / 1000.f) &lt;&lt; &quot; s&quot; &lt;&lt; std::endl
        ///
        ///struct Window : olc::PixelGameEngine
        ///{
        ///	Window()
        ///	{
        ///		sAppName = &quot;{projectName}&quot;;
        ///	}
        ///
        ///	bool OnUserCreate() override
        ///	{
        ///		return true;
        ///	}
        ///
        ///	bool OnUserUpd [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string olcPGE_main {
            get {
                return ResourceManager.GetString("olcPGE_main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #define OLC_PGE_APPLICATION
        ///#include &quot;olcPixelGameEngine.h&quot;
        ///.
        /// </summary>
        internal static string olcPGEcpp {
            get {
                return ResourceManager.GetString("olcPGEcpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Microsoft Visual Studio Solution File, Format Version 12.00
        ///# Visual Studio Version 16
        ///VisualStudioVersion = 16.0.31410.357
        ///MinimumVisualStudioVersion = 10.0.40219.1
        ///Project(&quot;{weirdGuid}&quot;) = &quot;{projectName}&quot;, &quot;{projectName}\{projectName}.vcxproj&quot;, &quot;{projectGuid}&quot;
        ///EndProject
        ///Global
        ///	GlobalSection(SolutionConfigurationPlatforms) = preSolution
        ///		Debug|x64 = Debug|x64
        ///		Release|x64 = Release|x64
        ///	EndGlobalSection
        ///	GlobalSection(ProjectConfigurationPlatforms) = postSolution
        ///		{projectGuid}.Debug|x64 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sln {
            get {
                return ResourceManager.GetString("sln", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///  &lt;PropertyGroup Label=&quot;Vcpkg&quot;&gt;
        ///    &lt;VcpkgEnableManifest&gt;true&lt;/VcpkgEnableManifest&gt;
        ///  &lt;/PropertyGroup&gt;
        ///  &lt;PropertyGroup Label=&quot;Vcpkg&quot; Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;&quot;&gt;
        ///    &lt;VcpkgInstalledDir&gt;$(SolutionDir)build\vcpkg\&lt;/VcpkgInstalledDir&gt;
        ///  &lt;/PropertyGroup&gt;
        ///  &lt;PropertyGroup Label=&quot;Vcpkg&quot; Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Release|x64&apos;&quot;&gt;
        ///    &lt;VcpkgInstalledDir&gt;$(SolutionDir)build\vcpkg\&lt;/VcpkgInstalledDir&gt;
        ///  &lt;/PropertyGroup&gt;.
        /// </summary>
        internal static string vcpkg {
            get {
                return ResourceManager.GetString("vcpkg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$schema&quot;: &quot;https://raw.githubusercontent.com/microsoft/vcpkg/master/scripts/vcpkg.schema.json&quot;,
        ///  &quot;name&quot;: &quot;{projectName}&quot;,
        ///  &quot;version&quot;: &quot;0.0.0&quot;,
        ///  &quot;dependencies&quot;: [
        ///	&quot;tbb&quot;,
        ///	&quot;pngpp&quot;
        ///  ]
        ///}.
        /// </summary>
        internal static string vcpkgManifest {
            get {
                return ResourceManager.GetString("vcpkgManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;ItemGroup Label=&quot;ProjectConfigurations&quot;&gt;
        ///    &lt;ProjectConfiguration Include=&quot;Debug|x64&quot;&gt;
        ///      &lt;Configuration&gt;Debug&lt;/Configuration&gt;
        ///      &lt;Platform&gt;x64&lt;/Platform&gt;
        ///    &lt;/ProjectConfiguration&gt;
        ///    &lt;ProjectConfiguration Include=&quot;Release|x64&quot;&gt;
        ///      &lt;Configuration&gt;Release&lt;/Configuration&gt;
        ///      &lt;Platform&gt;x64&lt;/Platform&gt;
        ///    &lt;/ProjectConfiguration&gt;
        ///  &lt;/ItemGroup&gt;
        ///  &lt;Prop [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string vcxproj {
            get {
                return ResourceManager.GetString("vcxproj", resourceCulture);
            }
        }
    }
}
